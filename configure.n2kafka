#!/bin/bash
#

mkl_require good_cflags
mkl_require socket
mkl_require gitversion as GITVERSION

mkl_mkvar_append CPPFLAGS CPPFLAGS "-DFORTIFY_SOURCE=2"
mkl_mkvar_append CPPFLAGS CPPFLAGS "-DNDEBUG"
mkl_mkvar_append CPPFLAGS CPPFLAGS "-fno-strict-aliasing" # Needed by libev
mkl_mkvar_append CPPFLAGS CPPFLAGS "-Wunused -Wcast-qual -Wextra -Wsign-conversion -Wshadow -Wno-used"
#mkl_mkvar_append CPPFLAGS CPPFLAGS "-ftrack-macro-expansion=2"
#mkl_mkvar_append CPPFLAGS CPPFLAGS "-Wjump-misses-init" # New in gcc 4.5
#mkl_mkvar_append CPPFLAGS CPPFLAGS "-Wdouble-promotion" # New in gcc 4.6
#mkl_mkvar_append CPPFLAGS CPPFLAGS "-Wunused-local-typedefs" # New in gcc 4.7
mkl_mkvar_append CPPFLAGS CPPFLAGS "-Wcast-align -Wdisabled-optimization -Winit-self -Wlogical-op"
mkl_mkvar_append CPPFLAGS CPPFLAGS "-Wmissing-include-dirs -Wstrict-overflow=5 -Wundef -Wswitch-default" 
mkl_mkvar_append CPPFLAGS CPPFLAGS "-Wmissing-declarations -Wdisabled-optimization" 

mkl_toggle_option "Standard" WITH_HTTP "--enable-http" "HTTP support using libmicrohttpd" "y"

function checks_libmicrohttpd {
  mkl_lib_check "libmicrohttpd" "" cont CC "-lmicrohttpd" "#include <microhttpd.h>"
  mkl_define_set "Have libmicrohttpd library" "HAVE_LIBMICROHTTPD" "1"
}

function checks {
    # Check that librdkafka is available, and allow to link it statically.
    mkl_lib_check --static=-lrdkafka "librdkafka" "" fail CC "-lrdkafka -lpthread -lz" \
       "#include <librdkafka/rdkafka.h>"

    # -lrt required on linux
    mkl_lib_check "librt" "" fail CC "-lrt" 

    mkl_lib_check "libev" "" fail CC "-lev" "#include <ev.h>"

    # -lcurl required if HTTP enabled
    if [[ "x$WITH_HTTP" == "xy" ]]; then
        checks_libmicrohttpd
    fi

    mkl_lib_check --static=-lrdkafka "librd" "" fail CC "-lrd -lpthread -lz -lrt" \
       "#include <librdkafka/rdkafka.h>"

    mkl_lib_check --static=-ljansson "libjansson" "" fail CC "-ljansson" \
       "#include <jansson.h>"

    mkl_in_list "$*" "--disable-optimization" || mkl_mkvar_append CPPFLAGS CPPFLAGS "-DNDEBUG"

}
